# Client side

# The app logo, fill with a url or base64 data.
APP_LOGO="https://www.google.com/search?client=ms-android-att-us-revc&sxsrf=AJOqlzXrf9hLMpqcRA6VF1fQIhf-VpRPmA:1678558221475&q=app+logos&tbm=isch&sa=X&ved=2ahUKEwj8_JnUvNT9AhUZlIkEHa9PCWYQ0pQJegQIGhAB&biw=412&bih=1054&dpr=2.63#imgrc=i1Mm86cK1xvcsM&lnspr=W10="
# The name of the app.
APP_NAME="hehehe"
# Summary your app's behavoir and show the users how to user it.
APP_SUMMARY="idek"
# Example input that shows user how to use the app.
EXAMPLE_INPUT=""

# Server side

# Required, the API key got from OpenAI (https://platform.openai.com/account/api-keys)
OPENAI_API_KEY="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"
# Optional, the agent server of OpenAI API. Use this when the offical OpenAI API server is unreachable.
OPENAI_API_BASE_URL=""
# Optional, the system message helps set the behavior of the assistant. (Learn more from https://platform.openai.com/docs/guides/chat/introduction)
SYSTEM_MESSAGE="{"# Note: you need to be using OpenAI Python v0.27.0 for the code below to work
import openai

openai.ChatCompletion.create(
  model="gpt-3.5-turbo",
  messages=[
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user", "content": "Who won the world series in 2020?"},
        {"role": "assistant", "content": "The Los Angeles Dodgers won the World Series in 2020."},
        {"role": "user", "content": "Where was it played?"}
    ]
)"
# Optional, the message template to wrap the user inputs, the `{{input}}` string in the template will be replaced by user inputs.
MESSAGE_TEMPLATE=""
